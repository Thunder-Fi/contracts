{
  "address": "0x5E723bac7e84B85f81667E8c032ba6E52C41A0DB",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_txnToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_decimals",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ThunderFi_AgreementIdInvalid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ThunderFi_CallerNotThePurchaser",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ThunderFi_CallerNotTheSeller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ThunderFi_InsufficientApproval",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ThunderFi_UserInvalid",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "agreementId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "status",
          "type": "uint256"
        }
      ],
      "name": "AgreementStatusUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "PLATFORM_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TXN_TOKEN",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "agreements",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "status",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "agreementURL",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "paymentToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "creationTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiryTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "purchaser",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_agreementCID",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_purchaser",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_paymentToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_expiry",
          "type": "uint256"
        }
      ],
      "name": "createAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getAgreement",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "status",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "agreementURL",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "paymentToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "creationTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiryTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "purchaser",
              "type": "address"
            }
          ],
          "internalType": "struct Agreement",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "rejectAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "rescindAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "settleAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xb1e4c860cde2c8d4505d7bf78ddf020c36b27d3a47b594de316b623241a126aa",
  "receipt": {
    "to": null,
    "from": "0x22b4fD82537573614340314f29bCb2fab182f409",
    "contractAddress": "0x5E723bac7e84B85f81667E8c032ba6E52C41A0DB",
    "transactionIndex": 1,
    "gasUsed": "14873120",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000020000000000000000000800000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000200000400000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000040000000000000100000000000",
    "blockHash": "0x081f58b6d715467600f0b998d6a53b5321ed00cc4e7edef25306199a0e63aad9",
    "transactionHash": "0xb1e4c860cde2c8d4505d7bf78ddf020c36b27d3a47b594de316b623241a126aa",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 158589543,
        "transactionHash": "0xb1e4c860cde2c8d4505d7bf78ddf020c36b27d3a47b594de316b623241a126aa",
        "address": "0x5E723bac7e84B85f81667E8c032ba6E52C41A0DB",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000022b4fd82537573614340314f29bcb2fab182f409"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x081f58b6d715467600f0b998d6a53b5321ed00cc4e7edef25306199a0e63aad9"
      }
    ],
    "blockNumber": 158589543,
    "cumulativeGasUsed": "14873120",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xb087c6656C00d6fe6831AeF5812C2850f1CCd613",
    6
  ],
  "numDeployments": 5,
  "solcInputHash": "a7f1c90bd5cf2fdbcb25f1cf33074ffe",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_txnToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ThunderFi_AgreementIdInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ThunderFi_CallerNotThePurchaser\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ThunderFi_CallerNotTheSeller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ThunderFi_InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ThunderFi_UserInvalid\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"agreementId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"status\",\"type\":\"uint256\"}],\"name\":\"AgreementStatusUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PLATFORM_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TXN_TOKEN\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"agreements\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"status\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"agreementURL\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creationTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiryTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_agreementCID\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_purchaser\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_expiry\",\"type\":\"uint256\"}],\"name\":\"createAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getAgreement\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"status\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"agreementURL\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creationTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiryTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"}],\"internalType\":\"struct Agreement\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"rejectAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"rescindAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"settleAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"AgreementStatusUpdate(uint256,address,address,uint256,uint256)\":{\"details\":\"STATUS -\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"settleAgreement(uint256)\":{\"notice\":\"During settlement, a fee of 0.01% of the owed amount is deducted.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ThunderFi.sol\":\"ThunderFi\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/ThunderFi.sol\":{\"content\":\"// Author : br0wnD3v\\n// ThunderFi : Invoicing protocol built for the Arbitrum ecosystem.\\n\\n//SPDX-License-Identifier:MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\nstruct Agreement {\\n    uint status;\\n    string agreementURL; //  ipfs://QmXeDSDdqSgxKZx6g62vJ4pD6AmbWWbzFNpdG9KdJXJggj\\n    address paymentToken;\\n    uint amount; // 500, 50,1000 etc\\n    uint creationTimestamp;\\n    uint expiryTimestamp;\\n    address seller; // The one issuing the invoice.\\n    address purchaser; // The one receiving the invoice.\\n}\\n\\nerror ThunderFi_UserInvalid();\\nerror ThunderFi_AgreementIdInvalid();\\nerror ThunderFi_CallerNotTheSeller();\\nerror ThunderFi_CallerNotThePurchaser();\\nerror ThunderFi_InsufficientApproval();\\n\\ncontract ThunderFi is Context, Ownable {\\n    uint private idCounter = 1;\\n    string public baseURI = \\\"https://gateway.lighthouse.storage/ipfs/\\\";\\n\\n    IERC20 public immutable TXN_TOKEN;\\n    uint public immutable PLATFORM_FEE;\\n\\n    mapping(uint => Agreement) public agreements;\\n    // [seller, purchaser]\\n    mapping(uint => address[2]) private agreeementToPartiesInvolved;\\n    mapping(address => bool) public whitelisted;\\n\\n    /// @dev STATUS -\\n    //  0 : Inactive\\n    //  1 : Created\\n    //  2 : Rescinded\\n    //  3 : Rejected\\n    //  4 : Settled\\n    event AgreementStatusUpdate(\\n        uint indexed agreementId,\\n        address indexed seller,\\n        address indexed purchaser,\\n        uint timestamp,\\n        uint status\\n    );\\n\\n    constructor(address _txnToken, uint _decimals) Ownable(_msgSender()) {\\n        TXN_TOKEN = IERC20(_txnToken);\\n        // USDC, fee = 0.1 USDC\\n        PLATFORM_FEE = 10 ** _decimals / 10;\\n    }\\n\\n    modifier isWhitelisted(address _user) {\\n        if (!whitelisted[_user]) revert ThunderFi_UserInvalid();\\n        _;\\n    }\\n\\n    modifier isSeller(uint _id, address _user) {\\n        if (agreeementToPartiesInvolved[_id][0] != _user)\\n            revert ThunderFi_CallerNotTheSeller();\\n        _;\\n    }\\n    modifier isPurchaser(uint _id, address _user) {\\n        if (agreeementToPartiesInvolved[_id][1] != _user)\\n            revert ThunderFi_CallerNotThePurchaser();\\n        _;\\n    }\\n\\n    modifier validAgreement(uint _id) {\\n        if (_id >= idCounter) revert ThunderFi_AgreementIdInvalid();\\n        _;\\n    }\\n\\n    function init() public {\\n        whitelisted[_msgSender()] = true;\\n    }\\n\\n    function createAgreement(\\n        string memory _agreementCID,\\n        address _purchaser,\\n        address _paymentToken,\\n        uint _amount,\\n        uint _expiry\\n    ) external isWhitelisted(_msgSender()) {\\n        if (TXN_TOKEN.allowance(_msgSender(), address(this)) < PLATFORM_FEE)\\n            revert ThunderFi_InsufficientApproval();\\n\\n        TXN_TOKEN.transferFrom(_msgSender(), address(this), PLATFORM_FEE);\\n\\n        uint idToSet = idCounter;\\n\\n        Agreement memory agreementObject = Agreement(\\n            1,\\n            _agreementCID,\\n            _paymentToken,\\n            _amount,\\n            block.timestamp,\\n            _expiry,\\n            _msgSender(),\\n            _purchaser\\n        );\\n\\n        agreements[idToSet] = agreementObject;\\n        agreeementToPartiesInvolved[idToSet] = [_msgSender(), _purchaser];\\n\\n        ++idCounter;\\n\\n        emit AgreementStatusUpdate(\\n            idToSet,\\n            _msgSender(),\\n            _purchaser,\\n            block.timestamp,\\n            1\\n        );\\n    }\\n\\n    function rescindAgreement(\\n        uint _id\\n    ) external validAgreement(_id) isSeller(_id, _msgSender()) {\\n        Agreement storage agreementObject = agreements[_id];\\n        address toEmitPurchaser = agreementObject.purchaser;\\n\\n        agreementObject.status = 2;\\n        agreementObject.agreementURL = \\\"\\\";\\n        agreementObject.paymentToken = address(0);\\n        agreementObject.amount = 0;\\n        agreementObject.expiryTimestamp = 2 ** 256 - 1;\\n        agreementObject.seller = address(0);\\n        agreementObject.purchaser = address(0);\\n\\n        agreeementToPartiesInvolved[_id] = [address(0), address(0)];\\n\\n        emit AgreementStatusUpdate(\\n            _id,\\n            _msgSender(),\\n            toEmitPurchaser,\\n            block.timestamp,\\n            2\\n        );\\n    }\\n\\n    function rejectAgreement(uint _id) external isPurchaser(_id, _msgSender()) {\\n        Agreement storage agreementObject = agreements[_id];\\n        address toEmitSeller = agreementObject.seller;\\n\\n        agreementObject.status = 3;\\n        agreementObject.agreementURL = \\\"\\\";\\n        agreementObject.paymentToken = address(0);\\n        agreementObject.amount = 0;\\n        agreementObject.expiryTimestamp = 2 ** 256 - 1;\\n        agreementObject.seller = address(0);\\n        agreementObject.purchaser = address(0);\\n\\n        agreeementToPartiesInvolved[_id] = [address(0), address(0)];\\n\\n        emit AgreementStatusUpdate(\\n            _id,\\n            toEmitSeller,\\n            _msgSender(),\\n            block.timestamp,\\n            3\\n        );\\n    }\\n\\n    /// During settlement, a fee of 0.01% of the owed amount is deducted.\\n    function settleAgreement(uint _id) external isPurchaser(_id, _msgSender()) {\\n        Agreement storage agreementObject = agreements[_id];\\n\\n        address _seller = agreementObject.seller;\\n        uint amount = agreementObject.amount;\\n        IERC20 paymentContract = IERC20(agreementObject.paymentToken);\\n\\n        if (paymentContract.allowance(_msgSender(), address(this)) != amount)\\n            revert ThunderFi_InsufficientApproval();\\n\\n        uint afterDeductionAmount = amount - amount / 10000;\\n        TXN_TOKEN.transfer(_seller, afterDeductionAmount);\\n\\n        agreementObject.status = 4;\\n\\n        emit AgreementStatusUpdate(\\n            _id,\\n            _seller,\\n            _msgSender(),\\n            block.timestamp,\\n            4\\n        );\\n    }\\n\\n    // ========\\n\\n    function getAgreement(\\n        uint _id\\n    ) external view validAgreement(_id) returns (Agreement memory) {\\n        return agreements[_id];\\n    }\\n}\\n\",\"keccak256\":\"0xc52709b2bbe54c989d9dfc97ce589385a4fdc8edbc73a240dffa0576aaa9b4ca\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c06040526001805560405180606001604052806028815260200162002fb76028913960029081620000329190620004a3565b503480156200004057600080fd5b5060405162002fdf38038062002fdf833981810160405281019062000066919062000625565b620000766200015d60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000eb5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000e291906200067d565b60405180910390fd5b620000fc816200016560201b60201c565b508173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050600a81600a6200014291906200081d565b6200014e91906200089d565b60a081815250505050620008d5565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ab57607f821691505b602082108103620002c157620002c062000263565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200032b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002ec565b620003378683620002ec565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003846200037e62000378846200034f565b62000359565b6200034f565b9050919050565b6000819050919050565b620003a08362000363565b620003b8620003af826200038b565b848454620002f9565b825550505050565b600090565b620003cf620003c0565b620003dc81848462000395565b505050565b5b818110156200040457620003f8600082620003c5565b600181019050620003e2565b5050565b601f82111562000453576200041d81620002c7565b6200042884620002dc565b8101602085101562000438578190505b620004506200044785620002dc565b830182620003e1565b50505b505050565b600082821c905092915050565b6000620004786000198460080262000458565b1980831691505092915050565b600062000493838362000465565b9150826002028217905092915050565b620004ae8262000229565b67ffffffffffffffff811115620004ca57620004c962000234565b5b620004d6825462000292565b620004e382828562000408565b600060209050601f8311600181146200051b576000841562000506578287015190505b62000512858262000485565b86555062000582565b601f1984166200052b86620002c7565b60005b8281101562000555578489015182556001820191506020850194506020810190506200052e565b8683101562000575578489015162000571601f89168262000465565b8355505b6001600288020188555050505b505050505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620005bc826200058f565b9050919050565b620005ce81620005af565b8114620005da57600080fd5b50565b600081519050620005ee81620005c3565b92915050565b620005ff816200034f565b81146200060b57600080fd5b50565b6000815190506200061f81620005f4565b92915050565b600080604083850312156200063f576200063e6200058a565b5b60006200064f85828601620005dd565b925050602062000662858286016200060e565b9150509250929050565b6200067781620005af565b82525050565b60006020820190506200069460008301846200066c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b600185111562000728578086048111156200070057620006ff6200069a565b5b6001851615620007105780820291505b80810290506200072085620006c9565b9450620006e0565b94509492505050565b60008262000743576001905062000816565b8162000753576000905062000816565b81600181146200076c57600281146200077757620007ad565b600191505062000816565b60ff8411156200078c576200078b6200069a565b5b8360020a915084821115620007a657620007a56200069a565b5b5062000816565b5060208310610133831016604e8410600b8410161715620007e75782820a905083811115620007e157620007e06200069a565b5b62000816565b620007f68484846001620006d6565b9250905081840481111562000810576200080f6200069a565b5b81810290505b9392505050565b60006200082a826200034f565b915062000837836200034f565b9250620008667fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000731565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000620008aa826200034f565b9150620008b7836200034f565b925082620008ca57620008c96200086e565b5b828204905092915050565b60805160a0516126996200091e600039600081816102a001528181610dde0152610f1f015260008181610ab301528181610bff01528181610dff0152610eda01526126996000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063b72912da1161008c578063d936547e11610066578063d936547e1461022c578063dbf094541461025c578063e1c7392a14610278578063f2fde38b14610282576100ea565b8063b72912da146101bb578063bd14de96146101d9578063c3be18d914610210576100ea565b80636c0360eb116100c85780636c0360eb14610159578063715018a61461017757806375a9f7f7146101815780638da5cb5b1461019d576100ea565b806334fbc9a1146100ef578063457c88161461010d5780634f9f6fe614610129575b600080fd5b6100f761029e565b6040516101049190611977565b60405180910390f35b610127600480360381019061012291906119d2565b6102c2565b005b610143600480360381019061013e91906119d2565b6105e9565b6040516101509190611b8f565b60405180910390f35b610161610810565b60405161016e9190611bfb565b60405180910390f35b61017f61089e565b005b61019b600480360381019061019691906119d2565b6108b2565b005b6101a5610bd4565b6040516101b29190611c2c565b60405180910390f35b6101c3610bfd565b6040516101d09190611ca6565b60405180910390f35b6101f360048036038101906101ee91906119d2565b610c21565b604051610207989796959493929190611cc1565b60405180910390f35b61022a60048036038101906102259190611ea7565b610d51565b005b61024660048036038101906102419190611f3e565b61127f565b6040516102539190611f86565b60405180910390f35b610276600480360381019061027191906119d2565b61129f565b005b610280611603565b005b61029c60048036038101906102979190611f3e565b611664565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b806102cb6116ea565b8073ffffffffffffffffffffffffffffffffffffffff166004600084815260200190815260200160002060016002811061030857610307611fa1565b5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610377576040517f584cc08900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060036000858152602001908152602001600020905060008160060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060038260000181905550604051806020016040528060008152508260010190816103e191906121d2565b5060008260020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600082600301819055507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826005018190555060008260060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008260070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152506004600087815260200190815260200160002090600261057192919061183d565b5061057a6116ea565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16867fe81dbd9bf7e53ebcae72e52a27a93b49d405a4f8642d084fd2acd4c140128bda4260036040516105da9291906122df565b60405180910390a45050505050565b6105f16118ba565b81600154811061062d576040517f07da921300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60036000848152602001908152602001600020604051806101000160405290816000820154815260200160018201805461066690611fff565b80601f016020809104026020016040519081016040528092919081815260200182805461069290611fff565b80156106df5780601f106106b4576101008083540402835291602001916106df565b820191906000526020600020905b8154815290600101906020018083116106c257829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016007820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050915050919050565b6002805461081d90611fff565b80601f016020809104026020016040519081016040528092919081815260200182805461084990611fff565b80156108965780601f1061086b57610100808354040283529160200191610896565b820191906000526020600020905b81548152906001019060200180831161087957829003601f168201915b505050505081565b6108a66116f2565b6108b06000611779565b565b806108bb6116ea565b8073ffffffffffffffffffffffffffffffffffffffff16600460008481526020019081526020016000206001600281106108f8576108f7611fa1565b5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610967576040517f584cc08900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060036000858152602001908152602001600020905060008160060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008260030154905060008360020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050818173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e6109fe6116ea565b306040518363ffffffff1660e01b8152600401610a1c929190612308565b602060405180830381865afa158015610a39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5d9190612346565b14610a94576040517f1aa1992200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061271083610aa491906123d1565b83610aaf9190612402565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85836040518363ffffffff1660e01b8152600401610b0c929190612436565b6020604051808303816000875af1158015610b2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4f919061248b565b5060048560000181905550610b626116ea565b73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16897fe81dbd9bf7e53ebcae72e52a27a93b49d405a4f8642d084fd2acd4c140128bda426004604051610bc29291906124f3565b60405180910390a45050505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b6003602052806000526040600020600091509050806000015490806001018054610c4a90611fff565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7690611fff565b8015610cc35780601f10610c9857610100808354040283529160200191610cc3565b820191906000526020600020905b815481529060010190602001808311610ca657829003601f168201915b5050505050908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040154908060050154908060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905088565b610d596116ea565b600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610ddc576040517f3d72504e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e610e416116ea565b306040518363ffffffff1660e01b8152600401610e5f929190612308565b602060405180830381865afa158015610e7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea09190612346565b1015610ed8576040517f1aa1992200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd610f1c6116ea565b307f00000000000000000000000000000000000000000000000000000000000000006040518463ffffffff1660e01b8152600401610f5c9392919061251c565b6020604051808303816000875af1158015610f7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9f919061248b565b50600060015490506000604051806101000160405280600181526020018981526020018773ffffffffffffffffffffffffffffffffffffffff168152602001868152602001428152602001858152602001610ff86116ea565b73ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff168152509050806003600084815260200190815260200160002060008201518160000155602082015181600101908161106291906121d2565b5060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050604051806040016040528061116c6116ea565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250600460008481526020019081526020016000209060026111ee92919061183d565b506001600081546111fe90612553565b919050819055508673ffffffffffffffffffffffffffffffffffffffff166112246116ea565b73ffffffffffffffffffffffffffffffffffffffff16837fe81dbd9bf7e53ebcae72e52a27a93b49d405a4f8642d084fd2acd4c140128bda42600160405161126d9291906125d6565b60405180910390a45050505050505050565b60056020528060005260406000206000915054906101000a900460ff1681565b8060015481106112db576040517f07da921300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816112e46116ea565b8073ffffffffffffffffffffffffffffffffffffffff166004600084815260200190815260200160002060006002811061132157611320611fa1565b5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611390576040517f8d07322100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060036000868152602001908152602001600020905060008160070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060028260000181905550604051806020016040528060008152508260010190816113fa91906121d2565b5060008260020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600082600301819055507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826005018190555060008260060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008260070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152506004600088815260200190815260200160002090600261158a92919061183d565b508073ffffffffffffffffffffffffffffffffffffffff166115aa6116ea565b73ffffffffffffffffffffffffffffffffffffffff16877fe81dbd9bf7e53ebcae72e52a27a93b49d405a4f8642d084fd2acd4c140128bda4260026040516115f392919061263a565b60405180910390a4505050505050565b6001600560006116116116ea565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550565b61166c6116f2565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036116de5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016116d59190611c2c565b60405180910390fd5b6116e781611779565b50565b600033905090565b6116fa6116ea565b73ffffffffffffffffffffffffffffffffffffffff16611718610bd4565b73ffffffffffffffffffffffffffffffffffffffff16146117775761173b6116ea565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161176e9190611c2c565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b82600281019282156118a9579160200282015b828111156118a85782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190611850565b5b5090506118b69190611941565b5090565b6040518061010001604052806000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b5b8082111561195a576000816000905550600101611942565b5090565b6000819050919050565b6119718161195e565b82525050565b600060208201905061198c6000830184611968565b92915050565b6000604051905090565b600080fd5b600080fd5b6119af8161195e565b81146119ba57600080fd5b50565b6000813590506119cc816119a6565b92915050565b6000602082840312156119e8576119e761199c565b5b60006119f6848285016119bd565b91505092915050565b611a088161195e565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611a48578082015181840152602081019050611a2d565b60008484015250505050565b6000601f19601f8301169050919050565b6000611a7082611a0e565b611a7a8185611a19565b9350611a8a818560208601611a2a565b611a9381611a54565b840191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611ac982611a9e565b9050919050565b611ad981611abe565b82525050565b600061010083016000830151611af860008601826119ff565b5060208301518482036020860152611b108282611a65565b9150506040830151611b256040860182611ad0565b506060830151611b3860608601826119ff565b506080830151611b4b60808601826119ff565b5060a0830151611b5e60a08601826119ff565b5060c0830151611b7160c0860182611ad0565b5060e0830151611b8460e0860182611ad0565b508091505092915050565b60006020820190508181036000830152611ba98184611adf565b905092915050565b600082825260208201905092915050565b6000611bcd82611a0e565b611bd78185611bb1565b9350611be7818560208601611a2a565b611bf081611a54565b840191505092915050565b60006020820190508181036000830152611c158184611bc2565b905092915050565b611c2681611abe565b82525050565b6000602082019050611c416000830184611c1d565b92915050565b6000819050919050565b6000611c6c611c67611c6284611a9e565b611c47565b611a9e565b9050919050565b6000611c7e82611c51565b9050919050565b6000611c9082611c73565b9050919050565b611ca081611c85565b82525050565b6000602082019050611cbb6000830184611c97565b92915050565b600061010082019050611cd7600083018b611968565b8181036020830152611ce9818a611bc2565b9050611cf86040830189611c1d565b611d056060830188611968565b611d126080830187611968565b611d1f60a0830186611968565b611d2c60c0830185611c1d565b611d3960e0830184611c1d565b9998505050505050505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611d8882611a54565b810181811067ffffffffffffffff82111715611da757611da6611d50565b5b80604052505050565b6000611dba611992565b9050611dc68282611d7f565b919050565b600067ffffffffffffffff821115611de657611de5611d50565b5b611def82611a54565b9050602081019050919050565b82818337600083830152505050565b6000611e1e611e1984611dcb565b611db0565b905082815260208101848484011115611e3a57611e39611d4b565b5b611e45848285611dfc565b509392505050565b600082601f830112611e6257611e61611d46565b5b8135611e72848260208601611e0b565b91505092915050565b611e8481611abe565b8114611e8f57600080fd5b50565b600081359050611ea181611e7b565b92915050565b600080600080600060a08688031215611ec357611ec261199c565b5b600086013567ffffffffffffffff811115611ee157611ee06119a1565b5b611eed88828901611e4d565b9550506020611efe88828901611e92565b9450506040611f0f88828901611e92565b9350506060611f20888289016119bd565b9250506080611f31888289016119bd565b9150509295509295909350565b600060208284031215611f5457611f5361199c565b5b6000611f6284828501611e92565b91505092915050565b60008115159050919050565b611f8081611f6b565b82525050565b6000602082019050611f9b6000830184611f77565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061201757607f821691505b60208210810361202a57612029611fd0565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026120927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612055565b61209c8683612055565b95508019841693508086168417925050509392505050565b60006120cf6120ca6120c58461195e565b611c47565b61195e565b9050919050565b6000819050919050565b6120e9836120b4565b6120fd6120f5826120d6565b848454612062565b825550505050565b600090565b612112612105565b61211d8184846120e0565b505050565b5b818110156121415761213660008261210a565b600181019050612123565b5050565b601f8211156121865761215781612030565b61216084612045565b8101602085101561216f578190505b61218361217b85612045565b830182612122565b50505b505050565b600082821c905092915050565b60006121a96000198460080261218b565b1980831691505092915050565b60006121c28383612198565b9150826002028217905092915050565b6121db82611a0e565b67ffffffffffffffff8111156121f4576121f3611d50565b5b6121fe8254611fff565b612209828285612145565b600060209050601f83116001811461223c576000841561222a578287015190505b61223485826121b6565b86555061229c565b601f19841661224a86612030565b60005b828110156122725784890151825560018201915060208501945060208101905061224d565b8683101561228f578489015161228b601f891682612198565b8355505b6001600288020188555050505b505050505050565b6000819050919050565b60006122c96122c46122bf846122a4565b611c47565b61195e565b9050919050565b6122d9816122ae565b82525050565b60006040820190506122f46000830185611968565b61230160208301846122d0565b9392505050565b600060408201905061231d6000830185611c1d565b61232a6020830184611c1d565b9392505050565b600081519050612340816119a6565b92915050565b60006020828403121561235c5761235b61199c565b5b600061236a84828501612331565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006123dc8261195e565b91506123e78361195e565b9250826123f7576123f6612373565b5b828204905092915050565b600061240d8261195e565b91506124188361195e565b92508282039050818111156124305761242f6123a2565b5b92915050565b600060408201905061244b6000830185611c1d565b6124586020830184611968565b9392505050565b61246881611f6b565b811461247357600080fd5b50565b6000815190506124858161245f565b92915050565b6000602082840312156124a1576124a061199c565b5b60006124af84828501612476565b91505092915050565b6000819050919050565b60006124dd6124d86124d3846124b8565b611c47565b61195e565b9050919050565b6124ed816124c2565b82525050565b60006040820190506125086000830185611968565b61251560208301846124e4565b9392505050565b60006060820190506125316000830186611c1d565b61253e6020830185611c1d565b61254b6040830184611968565b949350505050565b600061255e8261195e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036125905761258f6123a2565b5b600182019050919050565b6000819050919050565b60006125c06125bb6125b68461259b565b611c47565b61195e565b9050919050565b6125d0816125a5565b82525050565b60006040820190506125eb6000830185611968565b6125f860208301846125c7565b9392505050565b6000819050919050565b600061262461261f61261a846125ff565b611c47565b61195e565b9050919050565b61263481612609565b82525050565b600060408201905061264f6000830185611968565b61265c602083018461262b565b939250505056fea26469706673582212207ec47ad8383c148c4cb716f8967c1b0e1333b669d2799d368746146b64f4b7ca64736f6c6343000814003368747470733a2f2f676174657761792e6c69676874686f7573652e73746f726167652f697066732f",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063b72912da1161008c578063d936547e11610066578063d936547e1461022c578063dbf094541461025c578063e1c7392a14610278578063f2fde38b14610282576100ea565b8063b72912da146101bb578063bd14de96146101d9578063c3be18d914610210576100ea565b80636c0360eb116100c85780636c0360eb14610159578063715018a61461017757806375a9f7f7146101815780638da5cb5b1461019d576100ea565b806334fbc9a1146100ef578063457c88161461010d5780634f9f6fe614610129575b600080fd5b6100f761029e565b6040516101049190611977565b60405180910390f35b610127600480360381019061012291906119d2565b6102c2565b005b610143600480360381019061013e91906119d2565b6105e9565b6040516101509190611b8f565b60405180910390f35b610161610810565b60405161016e9190611bfb565b60405180910390f35b61017f61089e565b005b61019b600480360381019061019691906119d2565b6108b2565b005b6101a5610bd4565b6040516101b29190611c2c565b60405180910390f35b6101c3610bfd565b6040516101d09190611ca6565b60405180910390f35b6101f360048036038101906101ee91906119d2565b610c21565b604051610207989796959493929190611cc1565b60405180910390f35b61022a60048036038101906102259190611ea7565b610d51565b005b61024660048036038101906102419190611f3e565b61127f565b6040516102539190611f86565b60405180910390f35b610276600480360381019061027191906119d2565b61129f565b005b610280611603565b005b61029c60048036038101906102979190611f3e565b611664565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b806102cb6116ea565b8073ffffffffffffffffffffffffffffffffffffffff166004600084815260200190815260200160002060016002811061030857610307611fa1565b5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610377576040517f584cc08900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060036000858152602001908152602001600020905060008160060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060038260000181905550604051806020016040528060008152508260010190816103e191906121d2565b5060008260020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600082600301819055507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826005018190555060008260060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008260070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152506004600087815260200190815260200160002090600261057192919061183d565b5061057a6116ea565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16867fe81dbd9bf7e53ebcae72e52a27a93b49d405a4f8642d084fd2acd4c140128bda4260036040516105da9291906122df565b60405180910390a45050505050565b6105f16118ba565b81600154811061062d576040517f07da921300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60036000848152602001908152602001600020604051806101000160405290816000820154815260200160018201805461066690611fff565b80601f016020809104026020016040519081016040528092919081815260200182805461069290611fff565b80156106df5780601f106106b4576101008083540402835291602001916106df565b820191906000526020600020905b8154815290600101906020018083116106c257829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016007820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050915050919050565b6002805461081d90611fff565b80601f016020809104026020016040519081016040528092919081815260200182805461084990611fff565b80156108965780601f1061086b57610100808354040283529160200191610896565b820191906000526020600020905b81548152906001019060200180831161087957829003601f168201915b505050505081565b6108a66116f2565b6108b06000611779565b565b806108bb6116ea565b8073ffffffffffffffffffffffffffffffffffffffff16600460008481526020019081526020016000206001600281106108f8576108f7611fa1565b5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610967576040517f584cc08900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060036000858152602001908152602001600020905060008160060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008260030154905060008360020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050818173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e6109fe6116ea565b306040518363ffffffff1660e01b8152600401610a1c929190612308565b602060405180830381865afa158015610a39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5d9190612346565b14610a94576040517f1aa1992200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061271083610aa491906123d1565b83610aaf9190612402565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85836040518363ffffffff1660e01b8152600401610b0c929190612436565b6020604051808303816000875af1158015610b2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4f919061248b565b5060048560000181905550610b626116ea565b73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16897fe81dbd9bf7e53ebcae72e52a27a93b49d405a4f8642d084fd2acd4c140128bda426004604051610bc29291906124f3565b60405180910390a45050505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b6003602052806000526040600020600091509050806000015490806001018054610c4a90611fff565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7690611fff565b8015610cc35780601f10610c9857610100808354040283529160200191610cc3565b820191906000526020600020905b815481529060010190602001808311610ca657829003601f168201915b5050505050908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040154908060050154908060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905088565b610d596116ea565b600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610ddc576040517f3d72504e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e610e416116ea565b306040518363ffffffff1660e01b8152600401610e5f929190612308565b602060405180830381865afa158015610e7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea09190612346565b1015610ed8576040517f1aa1992200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd610f1c6116ea565b307f00000000000000000000000000000000000000000000000000000000000000006040518463ffffffff1660e01b8152600401610f5c9392919061251c565b6020604051808303816000875af1158015610f7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9f919061248b565b50600060015490506000604051806101000160405280600181526020018981526020018773ffffffffffffffffffffffffffffffffffffffff168152602001868152602001428152602001858152602001610ff86116ea565b73ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff168152509050806003600084815260200190815260200160002060008201518160000155602082015181600101908161106291906121d2565b5060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050604051806040016040528061116c6116ea565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250600460008481526020019081526020016000209060026111ee92919061183d565b506001600081546111fe90612553565b919050819055508673ffffffffffffffffffffffffffffffffffffffff166112246116ea565b73ffffffffffffffffffffffffffffffffffffffff16837fe81dbd9bf7e53ebcae72e52a27a93b49d405a4f8642d084fd2acd4c140128bda42600160405161126d9291906125d6565b60405180910390a45050505050505050565b60056020528060005260406000206000915054906101000a900460ff1681565b8060015481106112db576040517f07da921300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816112e46116ea565b8073ffffffffffffffffffffffffffffffffffffffff166004600084815260200190815260200160002060006002811061132157611320611fa1565b5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611390576040517f8d07322100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060036000868152602001908152602001600020905060008160070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060028260000181905550604051806020016040528060008152508260010190816113fa91906121d2565b5060008260020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600082600301819055507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826005018190555060008260060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008260070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152506004600088815260200190815260200160002090600261158a92919061183d565b508073ffffffffffffffffffffffffffffffffffffffff166115aa6116ea565b73ffffffffffffffffffffffffffffffffffffffff16877fe81dbd9bf7e53ebcae72e52a27a93b49d405a4f8642d084fd2acd4c140128bda4260026040516115f392919061263a565b60405180910390a4505050505050565b6001600560006116116116ea565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550565b61166c6116f2565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036116de5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016116d59190611c2c565b60405180910390fd5b6116e781611779565b50565b600033905090565b6116fa6116ea565b73ffffffffffffffffffffffffffffffffffffffff16611718610bd4565b73ffffffffffffffffffffffffffffffffffffffff16146117775761173b6116ea565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161176e9190611c2c565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b82600281019282156118a9579160200282015b828111156118a85782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190611850565b5b5090506118b69190611941565b5090565b6040518061010001604052806000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b5b8082111561195a576000816000905550600101611942565b5090565b6000819050919050565b6119718161195e565b82525050565b600060208201905061198c6000830184611968565b92915050565b6000604051905090565b600080fd5b600080fd5b6119af8161195e565b81146119ba57600080fd5b50565b6000813590506119cc816119a6565b92915050565b6000602082840312156119e8576119e761199c565b5b60006119f6848285016119bd565b91505092915050565b611a088161195e565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611a48578082015181840152602081019050611a2d565b60008484015250505050565b6000601f19601f8301169050919050565b6000611a7082611a0e565b611a7a8185611a19565b9350611a8a818560208601611a2a565b611a9381611a54565b840191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611ac982611a9e565b9050919050565b611ad981611abe565b82525050565b600061010083016000830151611af860008601826119ff565b5060208301518482036020860152611b108282611a65565b9150506040830151611b256040860182611ad0565b506060830151611b3860608601826119ff565b506080830151611b4b60808601826119ff565b5060a0830151611b5e60a08601826119ff565b5060c0830151611b7160c0860182611ad0565b5060e0830151611b8460e0860182611ad0565b508091505092915050565b60006020820190508181036000830152611ba98184611adf565b905092915050565b600082825260208201905092915050565b6000611bcd82611a0e565b611bd78185611bb1565b9350611be7818560208601611a2a565b611bf081611a54565b840191505092915050565b60006020820190508181036000830152611c158184611bc2565b905092915050565b611c2681611abe565b82525050565b6000602082019050611c416000830184611c1d565b92915050565b6000819050919050565b6000611c6c611c67611c6284611a9e565b611c47565b611a9e565b9050919050565b6000611c7e82611c51565b9050919050565b6000611c9082611c73565b9050919050565b611ca081611c85565b82525050565b6000602082019050611cbb6000830184611c97565b92915050565b600061010082019050611cd7600083018b611968565b8181036020830152611ce9818a611bc2565b9050611cf86040830189611c1d565b611d056060830188611968565b611d126080830187611968565b611d1f60a0830186611968565b611d2c60c0830185611c1d565b611d3960e0830184611c1d565b9998505050505050505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611d8882611a54565b810181811067ffffffffffffffff82111715611da757611da6611d50565b5b80604052505050565b6000611dba611992565b9050611dc68282611d7f565b919050565b600067ffffffffffffffff821115611de657611de5611d50565b5b611def82611a54565b9050602081019050919050565b82818337600083830152505050565b6000611e1e611e1984611dcb565b611db0565b905082815260208101848484011115611e3a57611e39611d4b565b5b611e45848285611dfc565b509392505050565b600082601f830112611e6257611e61611d46565b5b8135611e72848260208601611e0b565b91505092915050565b611e8481611abe565b8114611e8f57600080fd5b50565b600081359050611ea181611e7b565b92915050565b600080600080600060a08688031215611ec357611ec261199c565b5b600086013567ffffffffffffffff811115611ee157611ee06119a1565b5b611eed88828901611e4d565b9550506020611efe88828901611e92565b9450506040611f0f88828901611e92565b9350506060611f20888289016119bd565b9250506080611f31888289016119bd565b9150509295509295909350565b600060208284031215611f5457611f5361199c565b5b6000611f6284828501611e92565b91505092915050565b60008115159050919050565b611f8081611f6b565b82525050565b6000602082019050611f9b6000830184611f77565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061201757607f821691505b60208210810361202a57612029611fd0565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026120927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612055565b61209c8683612055565b95508019841693508086168417925050509392505050565b60006120cf6120ca6120c58461195e565b611c47565b61195e565b9050919050565b6000819050919050565b6120e9836120b4565b6120fd6120f5826120d6565b848454612062565b825550505050565b600090565b612112612105565b61211d8184846120e0565b505050565b5b818110156121415761213660008261210a565b600181019050612123565b5050565b601f8211156121865761215781612030565b61216084612045565b8101602085101561216f578190505b61218361217b85612045565b830182612122565b50505b505050565b600082821c905092915050565b60006121a96000198460080261218b565b1980831691505092915050565b60006121c28383612198565b9150826002028217905092915050565b6121db82611a0e565b67ffffffffffffffff8111156121f4576121f3611d50565b5b6121fe8254611fff565b612209828285612145565b600060209050601f83116001811461223c576000841561222a578287015190505b61223485826121b6565b86555061229c565b601f19841661224a86612030565b60005b828110156122725784890151825560018201915060208501945060208101905061224d565b8683101561228f578489015161228b601f891682612198565b8355505b6001600288020188555050505b505050505050565b6000819050919050565b60006122c96122c46122bf846122a4565b611c47565b61195e565b9050919050565b6122d9816122ae565b82525050565b60006040820190506122f46000830185611968565b61230160208301846122d0565b9392505050565b600060408201905061231d6000830185611c1d565b61232a6020830184611c1d565b9392505050565b600081519050612340816119a6565b92915050565b60006020828403121561235c5761235b61199c565b5b600061236a84828501612331565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006123dc8261195e565b91506123e78361195e565b9250826123f7576123f6612373565b5b828204905092915050565b600061240d8261195e565b91506124188361195e565b92508282039050818111156124305761242f6123a2565b5b92915050565b600060408201905061244b6000830185611c1d565b6124586020830184611968565b9392505050565b61246881611f6b565b811461247357600080fd5b50565b6000815190506124858161245f565b92915050565b6000602082840312156124a1576124a061199c565b5b60006124af84828501612476565b91505092915050565b6000819050919050565b60006124dd6124d86124d3846124b8565b611c47565b61195e565b9050919050565b6124ed816124c2565b82525050565b60006040820190506125086000830185611968565b61251560208301846124e4565b9392505050565b60006060820190506125316000830186611c1d565b61253e6020830185611c1d565b61254b6040830184611968565b949350505050565b600061255e8261195e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036125905761258f6123a2565b5b600182019050919050565b6000819050919050565b60006125c06125bb6125b68461259b565b611c47565b61195e565b9050919050565b6125d0816125a5565b82525050565b60006040820190506125eb6000830185611968565b6125f860208301846125c7565b9392505050565b6000819050919050565b600061262461261f61261a846125ff565b611c47565b61195e565b9050919050565b61263481612609565b82525050565b600060408201905061264f6000830185611968565b61265c602083018461262b565b939250505056fea26469706673582212207ec47ad8383c148c4cb716f8967c1b0e1333b669d2799d368746146b64f4b7ca64736f6c63430008140033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "events": {
      "AgreementStatusUpdate(uint256,address,address,uint256,uint256)": {
        "details": "STATUS -"
      }
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "settleAgreement(uint256)": {
        "notice": "During settlement, a fee of 0.01% of the owed amount is deducted."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/ThunderFi.sol:ThunderFi",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 294,
        "contract": "contracts/ThunderFi.sol:ThunderFi",
        "label": "idCounter",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 297,
        "contract": "contracts/ThunderFi.sol:ThunderFi",
        "label": "baseURI",
        "offset": 0,
        "slot": "2",
        "type": "t_string_storage"
      },
      {
        "astId": 307,
        "contract": "contracts/ThunderFi.sol:ThunderFi",
        "label": "agreements",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(Agreement)277_storage)"
      },
      {
        "astId": 313,
        "contract": "contracts/ThunderFi.sol:ThunderFi",
        "label": "agreeementToPartiesInvolved",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_array(t_address)2_storage)"
      },
      {
        "astId": 317,
        "contract": "contracts/ThunderFi.sol:ThunderFi",
        "label": "whitelisted",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)2_storage": {
        "base": "t_address",
        "encoding": "inplace",
        "label": "address[2]",
        "numberOfBytes": "64"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_array(t_address)2_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address[2])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)2_storage"
      },
      "t_mapping(t_uint256,t_struct(Agreement)277_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Agreement)",
        "numberOfBytes": "32",
        "value": "t_struct(Agreement)277_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Agreement)277_storage": {
        "encoding": "inplace",
        "label": "struct Agreement",
        "members": [
          {
            "astId": 262,
            "contract": "contracts/ThunderFi.sol:ThunderFi",
            "label": "status",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 264,
            "contract": "contracts/ThunderFi.sol:ThunderFi",
            "label": "agreementURL",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 266,
            "contract": "contracts/ThunderFi.sol:ThunderFi",
            "label": "paymentToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 268,
            "contract": "contracts/ThunderFi.sol:ThunderFi",
            "label": "amount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 270,
            "contract": "contracts/ThunderFi.sol:ThunderFi",
            "label": "creationTimestamp",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 272,
            "contract": "contracts/ThunderFi.sol:ThunderFi",
            "label": "expiryTimestamp",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 274,
            "contract": "contracts/ThunderFi.sol:ThunderFi",
            "label": "seller",
            "offset": 0,
            "slot": "6",
            "type": "t_address"
          },
          {
            "astId": 276,
            "contract": "contracts/ThunderFi.sol:ThunderFi",
            "label": "purchaser",
            "offset": 0,
            "slot": "7",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}